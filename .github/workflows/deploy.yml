name: CI/CD Pipeline to Server

on:
  push:
    branches:
      - main # 当有新的代码推送到 main 分支时触发

jobs:
  deploy:
    runs-on: ubuntu-latest # 使用最新的Ubuntu运行器

    steps:
    - name: Checkout code
      uses: actions/checkout@v4 # 检出你的代码

    - name: Transfer files to remote server
      # 使用 rsync 安全地传输文件到远程服务器的非root用户家目录下的临时文件夹
      # 注意：rsync 默认不直接支持密码认证，但 appleboy/scp-action 可以包装它。
      # 对于文件传输，我们仍然会依赖 appleboy/ssh-action 的能力来执行远程命令
      # 或者使用 appleboy/scp-action 来传输，它支持密码
      uses: appleboy/scp-action@v0.1.7 # 使用 appleboy/scp-action 来传输文件
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }} # 使用密码
        port: 22 # 默认SSH端口
        source: "./" # 传输当前目录的所有文件
        target: "~/lottery-app-temp" # 目标目录，会在用户家目录下创建
        # 排除不需要的文件和目录
        strip_components: 0 # 不剥离路径组件
        rm: true # 每次传输前删除目标文件夹内容，确保干净

    - name: Deploy to Server
      uses: appleboy/ssh-action@v1.0.3 # 使用 appleboy/ssh-action 来执行远程命令
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }} # 使用密码
        script: |
          echo "Navigating to temporary application directory on remote server..."
          cd ~/lottery-app-temp

          echo "Moving files to /opt/lottery-app (requires sudo)..."
          sudo mkdir -p /opt/lottery-app # 确保目标部署目录存在
          sudo rm -rf /opt/lottery-app/* # 清理旧文件
          sudo mv * /opt/lottery-app/    # 移动新文件
          
          echo "Cleaning up temporary directory..."
          rm -rf ~/lottery-app-temp

          echo "Changing to deployment directory..."
          cd /opt/lottery-app

          echo "Stopping and removing existing Docker container (if any)..."
          # 使用 sudo 执行 docker 命令
          sudo docker stop lottery-app || true
          sudo docker rm lottery-app || true

          echo "Removing old Docker image (if any)..."
          sudo docker rmi lottery-app || true

          echo "Building new Docker image..."
          sudo docker build -t lottery-app .

          echo "Running new Docker container..."
          sudo docker run -d -p 8080:8080 --name lottery-app lottery-app

          echo "Deployment complete!"
